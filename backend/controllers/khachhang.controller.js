const khachhangModel = require('../models/khachhang.model');

// GET th√¥ng tin kh√°ch h√†ng
const getKhachHangById = async (req, res) => {
  try {
    const { id } = req.params;
    console.log('üîç MAKH c·∫ßn l·∫•y:', id);

    if (!id || isNaN(id)) {
      return res.status(400).json({ message: 'ID kh√¥ng h·ª£p l·ªá' });
    }

    // G·ªçi h√†m model l·∫•y d·ªØ li·ªáu (nh·∫≠n v·ªÅ nguy√™n k·∫øt qu·∫£ query)
    const result = await khachhangModel.fetchKhachHangById(id);

    if (result.recordset.length === 0) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng' });
    }

    res.json(result.recordset[0]);
  } catch (error) {
    console.error('‚ùå L·ªói SQL:', error);
    res.status(500).json({ message: 'L·ªói khi l·∫•y th√¥ng tin kh√°ch h√†ng', error: error.message });
  }
};

// PUT c·∫≠p nh·∫≠t th√¥ng tin kh√°ch h√†ng
const updateKhachHang = async (req, res) => {
  try {
    const { id } = req.params;
    const { TEN, DCHI, DTHOAI, EMAIL } = req.body;

    // G·ªçi h√†m model c·∫≠p nh·∫≠t
    await khachhangModel.updateKhachHangInfo(id, { TEN, DCHI, DTHOAI, EMAIL });

    res.json({ message: 'C·∫≠p nh·∫≠t th√†nh c√¥ng!' });
  } catch (error) {
    console.error('‚ùå L·ªói c·∫≠p nh·∫≠t:', error);
    res.status(500).json({ message: 'C·∫≠p nh·∫≠t th·∫•t b·∫°i!', error: error.message });
  }
};

module.exports = {
  getKhachHangById,
  updateKhachHang,
};
